{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Code/CarReseller_proxy/client/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport Cars from './Cars';\nimport CarDetails from './CarDetails'; // let baseURL = process.env.REACT_APP_BASEURL\n// if (process.env.NODE_ENV === 'development') {\n//   baseURL = 'http://localhost:3001/'\n// } else {\n//   baseURL = 'https://car-reseller-api.herokuapp.com/'\n// }\n// console.log('current base URL:', baseURL)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = (event, car) => {\n      console.log('click', car);\n      this.setState({\n        clicked_car: car\n      });\n    };\n\n    this.state = {\n      cars: [],\n      clicked_car: '',\n      // to display loading ring\n      loading: false\n    };\n  }\n\n  // fetch cars when component mounts\n  componentDidMount() {\n    this.getCars();\n  } // function to fetch cars from the database\n\n\n  getCars() {\n    // change 'loading' state to true when getCars() fires\n    this.setState({\n      loading: true\n    }); // function to display loading ring (for demonstration purposes)\n\n    const delay = time => new Promise(resolve => setTimeout(resolve, time));\n\n    delay(2000).then(() => fetch('/cars')).then(response => response.json()).then(resJSON => this.setState({\n      cars: resJSON,\n      loading: false\n    })).catch(error => console.log(error));\n  }\n\n  render() {\n    const _this$state = this.state,\n          cars = _this$state.cars,\n          clicked_car = _this$state.clicked_car;\n    console.log('render=', clicked_car.image);\n    let image_src;\n\n    if (clicked_car.image) {\n      image_src = '/' + clicked_car.image.substring(9);\n    } else {\n      image_src = '/placeholder.png';\n    }\n\n    console.log('image_src=', image_src);\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        className: \"cars_with_search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"...Loading\");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(CarDetails, {\n        clicked_car: clicked_car,\n        image_src: image_src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cars_with_search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Cars, {\n        cars: cars,\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/roman/Code/CarReseller_proxy/client/src/components/App/index.js"],"names":["React","Component","Cars","CarDetails","App","constructor","props","handleClick","event","car","console","log","setState","clicked_car","state","cars","loading","componentDidMount","getCars","delay","time","Promise","resolve","setTimeout","then","fetch","response","json","resJSON","catch","error","render","image","image_src","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgCnBC,WAhCmB,GAgCL,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACA,WAAKG,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEJ;AADD,OAAd;AAGD,KArCkB;;AAEjB,SAAKK,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXF,MAAAA,WAAW,EAAE,EAFF;AAGX;AACAG,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AAED;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACD,GAdyB,CAgB1B;;;AACAA,EAAAA,OAAO,GAAG;AACR;AACA,SAAKN,QAAL,CAAc;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAAd,EAFQ,CAGR;;AACA,UAAMG,KAAK,GAAGC,IAAI,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,IAAV,CAAjC,CAAtB;;AAEAD,IAAAA,KAAK,CAAC,IAAD,CAAL,CACGK,IADH,CACQ,MAAMC,KAAK,CAAC,OAAD,CADnB,EAEGD,IAFH,CAEQE,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGH,IAHH,CAGQI,OAAO,IAAI,KAAKhB,QAAL,CAAc;AAC5BG,MAAAA,IAAI,EAAEa,OADsB;AAE5BZ,MAAAA,OAAO,EAAE;AAFmB,KAAd,CAHnB,EAOGa,KAPH,CAOSC,KAAK,IAAIpB,OAAO,CAACC,GAAR,CAAYmB,KAAZ,CAPlB;AAQD;;AASDC,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKjB,KAD5B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOF,WADP,eACOA,WADP;AAEPH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,WAAW,CAACmB,KAAnC;AACA,QAAIC,SAAJ;;AACA,QAAIpB,WAAW,CAACmB,KAAhB,EAAuB;AACrBC,MAAAA,SAAS,GAAG,MAAMpB,WAAW,CAACmB,KAAZ,CAAkBE,SAAlB,CAA4B,CAA5B,CAAlB;AACD,KAFD,MAEO;AACLD,MAAAA,SAAS,GAAG,kBAAZ;AACD;;AACDvB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BsB,SAA1B;;AACA,QAAI,KAAKnB,KAAL,CAAWE,OAAf,EAAwB;AACtB,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,KAND,MAMO;AACL,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,WAAW,EAAEH,WAAzB;AAAsC,QAAA,SAAS,EAAEoB,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAElB,IAAZ;AAAkB,QAAA,WAAW,EAAE,KAAKR,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AASD;AACF;;AAnEyB;;AAsE5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cars from './Cars';\nimport CarDetails from './CarDetails';\n\n// let baseURL = process.env.REACT_APP_BASEURL\n\n// if (process.env.NODE_ENV === 'development') {\n//   baseURL = 'http://localhost:3001/'\n// } else {\n//   baseURL = 'https://car-reseller-api.herokuapp.com/'\n// }\n\n// console.log('current base URL:', baseURL)\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cars: [],\n      clicked_car: '',\n      // to display loading ring\n      loading: false,\n    }\n  };\n\n  // fetch cars when component mounts\n  componentDidMount() {\n    this.getCars();\n  }\n\n  // function to fetch cars from the database\n  getCars() {\n    // change 'loading' state to true when getCars() fires\n    this.setState({ loading: true });\n    // function to display loading ring (for demonstration purposes)\n    const delay = time => new Promise(resolve => setTimeout(resolve, time));\n\n    delay(2000)\n      .then(() => fetch('/cars'))\n      .then(response => response.json())\n      .then(resJSON => this.setState({\n         cars: resJSON,\n         loading: false,\n        }))\n      .catch(error => console.log(error));\n  }\n\n  handleClick = (event, car) => {\n    console.log('click', car);\n    this.setState({\n      clicked_car: car,\n    })\n  }\n\n  render() {\n    const { cars, clicked_car } = this.state;\n    console.log('render=', clicked_car.image);\n    let image_src;\n    if (clicked_car.image) {\n      image_src = '/' + clicked_car.image.substring(9);\n    } else {\n      image_src = '/placeholder.png'\n    }\n    console.log('image_src=', image_src);\n    if (this.state.loading) {\n      return (\n        <div className='cars_with_search'>\n          ...Loading\n        </div>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <CarDetails clicked_car={clicked_car} image_src={image_src} />\n          <div className='cars_with_search'>\n            <Cars cars={cars} handleClick={this.handleClick}/>\n          </div>\n        </React.Fragment>\n\n      )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}